version: "3"
services:
  postgres:
    container_name: portal-mvp-dev-postgres
    restart: always
    build:
      context: "${POSTGRES_BUILD_CONTEXT}"
      dockerfile: Dockerfile-postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "${POSTGRES_USER_ID}"
      POSTGRES_PASSWORD: "${POSTGRES_USER_PASSWORD}"
      APP_DB_NAME: "${APP_DB_NAME}"
      APP_DB_USER: "${APP_DB_USER}"
      APP_DB_PASS: "${APP_DB_PASS}"
    volumes:
      - ${POSTGRES_HOME_DIR}/data:/var/lib/postgresql/data
  backend:
    container_name: portal-mvp-dev-backend
    build:
      context: "${BACKEND_BUILD_CONTEXT}"
      dockerfile: Dockerfile-backend
    ports:
      - "8080:8080"
    environment: # springboot의 application-*.yml에 주입 필요한 정보
      DB_HOSTNAME: postgres
      DB_PORT: 5432
      DB_DBNAME: "${APP_DB_NAME}"
      DB_USERNAME: "${APP_DB_USER}"
      DB_PASSWORD: "${APP_DB_PASS}"
    depends_on:
      - postgres

  frontend:
    container_name: portal-mvp-dev-frontend
    build:
      context: "${FRONTEND_BUILD_CONTEXT}"
      dockerfile: Dockerfile-frontend
    ports:
      - "4000:4000"
